plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
}

def selenideVersion = "7.7.1",
    allureSelenideVersion = "2.29.0",
    junitVersion = "5.11.4",
    restAssuredVersion = "5.5.0",
    allureVersion = "2.29.0",
    slf4jVersion = "2.0.16",
    ownerVersion = "1.0.12",
    appiumJavaClientVersion = "9.4.0"

allure {
    report {
        version.set("$allureVersion")
    }
    adapter { // отвечает за появление папки build/allure-results
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("$allureVersion")
            }
        }
    }
}

repositories {
    mavenCentral()
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureSelenideVersion",
            "io.appium:java-client:$appiumJavaClientVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "commons-io:commons-io:2.11.0"
    )
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task local_test(type: Test) {
    useJUnitPlatform {
        includeTags("local")
    }
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}